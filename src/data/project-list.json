[
    {
        "title": "Elecdrawn",
        "thumbnail": "/media/projects/elecdrawn/thumbnail.gif",
        "description": "Elecdrawn is a JavaScript drawing application with various tools for drawing to the HTML Canvas. It was originally built as an Electron desktop application, but I switched it over to the web to make it more accessible.",
        "tools": "JavaScript, HTML, CSS, Canvas API",
        "id": "elecdrawn",
        "github": "https://github.com/samstorment/elecdrawn-web",
        "website":  "https://elecdrawn-web.vercel.app/",
        "media": [
            {
                "title": "Brush Fill, Brush, and Line",
                "path": "/media/projects/elecdrawn/brush-fill-line.gif",
                "type": "image/gif",
                "description": "These are some of the most basic drawing tools. Each one starts painting as the user clicks their mouse down and keeps painting while the mouse is moving. The painting ends when the mouse comes up anywhere on the window. Every drawing tool follows this same pattern which makes for some really great polymorphic behavior."
            },
            {
                "title": "Rectangle and Ellipse",
                "path": "/media/projects/elecdrawn/square-circle.gif",
                "type": "image/gif",
                "description": "Two fairly straight forward tools. Starts by capturing the user's mouse position on click, then clears the canvas and redraws the shape on mouse move to make the shape grow to the current mouse position. The rectangle has a radius property which adds some curves to the corners and changes the appearance of the curve based on where you start drawing the rectangle from. Both of these make use of a Shape superclass that has some basic properties for drawing shapes."
            },
            {
                "title": "Polygon",
                "path": "/media/projects/elecdrawn/polygon.gif",
                "type": "image/gif",
                "description": "The polygon tool can draw regular polygons with any number of sides. I capped it at 20 sides because regular polygons trend towards a perfect circle as the number of sides increase. Working out how to draw these made for some fun geometry. The first vertex of the polygon is placed at the user's mouse position and every other vertex is rotated relative to the first."
            },
            {
                "title": "Select",
                "path": "/media/projects/elecdrawn/select.gif",
                "type": "image/gif",
                "description": "The select tool is one of the more interesting and useful tools. It works by drawing a rectangle onto the canvas and placing the image data inside that rectangle into an invisible canvas layer. The main canvas is cleared inside that rectangular area, then we're free to drag the invisible layer without distrubing the main canvas. When the user releases their mouse, the invisible layer is drawn back to the main canvas layer."
            },
            {
                "title": "Lasso",
                "path": "/media/projects/elecdrawn/lasso.gif",
                "type": "image/gif",
                "description": "The lasso tool was the most difficult drawing tool to create. It works like the select tool in the sense that it lets you select an area and move it, but it is not limited to a rectangular shape. This is achieved by storing all the user's mouse coordinates as they draw the lasso, then clipping the canvas based on those points so only the lassoed area is active. The lasso follows the same pattern as the select tool where the clipped image is drawn to an invisible layer to drag it around before drawing it back to the main canvas on mouse up."
            },
            {
                "title": "Bucket",
                "path": "/media/projects/elecdrawn/fill.gif",
                "type": "image/gif",
                "description": "The bucket tool is one of more disappointing tools due to the nature of anti-aliased bitmap images. The pixels near jagged edges of drawings on the canvas are surrounded with similar but not exact color values that make the image look smoother. This has the negative side effect of leaving some gaps at the edges of non-straight lines when using the bucket. It works great for perfectly straight lines, but can get a bit slow if trying to fill the entire empty canvas."
            },
            {
                "title": "Mirror",
                "path": "/media/projects/elecdrawn/mirror.gif",
                "type": "image/gif",
                "description": "I saved the best for last. The mirror tool follows your mouse cursor to draw identical circles in sectors. This tool is my favorite to use and look at, but it was pretty easy to make. It uses a polygon as the base and just draws circles wherever the polygon vertices would be. I especially like combining this tool with some of the compositing options, but performance can drop pretty quickly when combining many circles with compositing."
            }
        ]
    },
    {
        "title": "Send a Demo",
        "thumbnail": "/media/projects/sad/thumbnail.gif",
        "description": "Send a demo is a web app made for recording and uploading audio to share with your friends. I worked with a friend over the course of a couple months adding various features, fixing bugs, and collaborating regularly.",
        "tools": "React, Node.js, Express, MongoDB, AWS S3, CSS, HTML",
        "id": "send-a-demo",
        "github": "https://github.com/thomasjonesmc/send-a-demo",
        "website":  "https://www.sendademo.com",
        "media": [
            {
                "title": "Home",
                "path": "/media/projects/sad/home.png",
                "type": "image/png",
                "description": "Send a Demo has a login/register system that sends login requests off to the Node.js server. The server validates the login info and communicates with MongoDB to store and retrieve data. The \"Login as Guest\" feature was added to let people use the app without the having to throw their email into a web application they've never heard of."
            },
            {
                "title": "Profile",
                "path": "/media/projects/sad/profile.png",
                "type": "image/png",
                "description": "Profile page with basic information. Users have control over which demos are displayed publicly here. Each user has a list of following and followers to quickly access their friends' profiles."
            },
            {
                "title": "Demos",
                "path": "/media/projects/sad/demos.png",
                "type": "image/png",
                "description": "The demos page lets users see all of their demos and create new demos. Each demo can be edited to add contributors, change the title, change the public status, or delete the demo. Demos that you contribute to but did not author do not grant you access to those customization options."
            },
            {
                "title": "Tracks",
                "path": "/media/projects/sad/tracks.png",
                "type": "image/png",
                "description": "This is the view after selecting a demo. Each demo is made up of a collection of audio tracks. Audio can be recorded for a track then uploaded to an AWS S3 bucket for storage. Each track has independent volume controls that can be adjusted as the audio plays. Tracks that are shorter than the longest track can have their start time adjusted. Multiple users can contribute tracks to a single demo as long as they have been added as a contributor to the demo."
            },
            {
                "title": "Playing a Demo",
                "path": "/media/projects/sad/song.mp4",
                "type": "video/mp4",
                "description": "A demo in action."
            }
        ]
    },
    {
        "title": "AB Form Senior Project",
        "thumbnail": "/media/projects/abform/thumbnail.gif",
        "description": "The AB Form project was my final senior project at SIUE. It took place over two full semesters in a team of three. We converted the Academic Scheduling Department's paper based schedule-change request form to a web application.",
        "tools": "React, Formik, Node.js, Express, MySQL, CSS, HTML",
        "id": "abform",
        "media": [
            {
                "title": "Original AB Form Description",
                "path": "/media/projects/abform/abform.jpg",
                "type": "image/jpg",
                "description": "This is the original AB Form that my senior project team of 3 redesigned for the Academic Scheduling department at SIUE. The form is used by departments at SIUE to make course change requests to the Academic Scheduling department. It is a paper form with several fields related to who is filling out the form and the class that they want to change. We used React, Formik, Node.js, Express, and MySQL to convert this to a web application. Users log into the application with their preexisting SIUE credentials thanks to SIUE's Central Authetication Service."
            },
            {
                "title": "Making a Request",
                "path": "/media/projects/abform/add-request.png",
                "type": "image/jpg",
                "description": "The redesigned form takes all the fields of the paper form to a more usable form on the web. We used the Formik library for managing the form state and validating form inputs. Most inputs have very specific rules that must be met by the user or their form input is invalid. Our form has dynamic feedback on all inputs to alert the user of an invalid or missing input."
            },
            {
                "title": "Inbox",
                "path": "/media/projects/abform/responsive-inbox.png",
                "type": "image/jpg",
                "description": "When users make requests to add, change, or cancel classes, those requests get sent to Department Chairs, Deans, and Academic Scheduling to be approved or denied. When Chairs, Deans, or Schedulers login to the site, requests awaiting their approval are visible in their inbox. The implementation of the inbox used a pagination method to only pull more requests from the server once the user has scrolled to the bottom of their inbox. This was a challenging feature to implement, but was a very good exercise in full-stack communications between front-end, server, and database."
            },
            {
                "title": "Inbox Filter",
                "path": "/media/projects/abform/inbox-filter.png",
                "type": "image/jpg",
                "description": "The inbox also has a filter for limiting visible requests based on the values of the various filter fields. This was a vital feature for Academic Scheduling as they would frequently need to revisit and reference old requests. This feature proved quite difficult to make as each filter piled more constraints onto the SQL query that retrieved the inbox items."
            },
            {
                "title": "Request Approval",
                "path": "/media/projects/abform/approval-screen.png",
                "type": "image/jpg",
                "description": "After clicking on a request in the inbox, this is the screen that is seen by the users who approve course change requests. It lays out all of the course info so that Department Chairs, Deans, and Academic Scheduling can validate it. This page has \"Approve\" and \"Reject\" buttons to approve or reject the request. If approved, the request moves to the next approver until Academic Scheduling gives the final approval and the request is successful."
            },
            {
                "title": "Data Management",
                "path": "/media/projects/abform/data-management.png",
                "type": "image/jpg",
                "description": "This is a page that is only visible to Academic Scheduling personnel. It lets them add and update buildings that are available on campus. These are the buildings visible in the dropdown menus users choose from when making a request. Pages identical to this one exist for course schedule types, subjects, departments, and course instruction methods."
            }
        ]
    }
]