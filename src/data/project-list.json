[
    {
        "title": "Elecdrawn",
        "thumbnail": "/images/projects/elecdrawn/thumbnail.gif",
        "description": "Elecdrawn is a JavaScript drawing application with various tools for drawing to the HTML Canvas. It was originally built as an Electron desktop application, hence the name, but I switched it over to the web to make it more accessible.",
        "tools": "JavaScript, HTML, CSS, Canvas API",
        "id": "elecdrawn",
        "github": "https://github.com/samstorment/elecdrawn-web",
        "website":  "https://elecdrawn-web.vercel.app/",
        "images": [
            {
                "title": "Brush Fill, Brush, and Line",
                "path": "/images/projects/elecdrawn/brush-fill-line.gif",
                "description": "Some of the most basic drawing tools. Each one starts painting on the mouse down event and keeps painting while the mouse is moving. Finishes on the mouse up event. Every drawing tool follows this same pattern which makes for some really great polymorphic behavior."
            },
            {
                "title": "Rectangle and Ellipse",
                "path": "/images/projects/elecdrawn/square-circle.gif",
                "description": "Two fairly straight forward tools. Starts by capturing the user's mouse position on click, then clears the canvas and redraws the shape on mouse move to make the shape grow to the current mouse position. The rectangle has a radius property which adds some curves to the corners and changes the appearance of the curve based on where you start drawing the rectangle from. Both of these make use of a Shape superclass that has some basic properties for drawing shapes."
            },
            {
                "title": "Polygon",
                "path": "/images/projects/elecdrawn/polygon.gif",
                "description": "The polygon tool can draws regular polygons with any number of sides. I capped it at 20 sides because regular polygons trend towards a perfect circle as the number of sides increase. Working out how to draw these was a bit of fun geometry. The first vertex of the polygon is placed at the user's mouse position and every other vertex is rotated relative to the first."
            },
            {
                "title": "Select",
                "path": "/images/projects/elecdrawn/select.gif",
                "description": "The select tool is one of the more interesting and useful tools. It works by drawing a rectangle onto the canvas and placing the image data inside that rectangle into an invisible canvas layer. The main canvas is cleared inside that rectangular area, then we're free to drag the invisible layer without distrubing the main canvas. When the user releases their mouse, the invisible layer is drawn back to the main canvas layer. After the select rectangle is drawn the user's mouse is tracked to see if they click inside one of the scaling anchors. If they do, the scaled image is continually redrawn on the invisible layer and only moved to the main layer on mouse up."
            },
            {
                "title": "Lasso",
                "path": "/images/projects/elecdrawn/lasso.gif",
                "description": "The lasso tool was the most difficult drawing tool to create. It works like the select tool in the sense that it lets you select an area and move it, but it can be any user painted shape. This is achieved by storing all the user's mouse coordinates as they draw the lasso, then clipping the canvas based on those points. We then follow the same pattern as the select tool where we move the clipped image to an invisible layer to drag it around before drawing it back to the main canvas on mouse up."
            },
            {
                "title": "Bucket",
                "path": "/images/projects/elecdrawn/fill.gif",
                "description": "The bucket tool is one of more disappointing tools due to the nature of anti-aliased bitmap images. The pixels near jagged edges of drawings on the canvas are surrounded with similar but not exact color values that make the image look smoother. This has the negative side effect of leaving some gaps at the edges of non-straight lines when using the bucket. It works great for perfectly straight lines, but can get a bit slow if trying to fill the entire empty canvas."
            },
            {
                "title": "Mirror",
                "path": "/images/projects/elecdrawn/mirror.gif",
                "description": "I saved the best for last. The mirror tool follows your mouse cursor to draw identical circles in sectors. This tool is my favorite to use and look at, but it was pretty easy to make. It uses a polygon as the base and just draws circles wherever the polygon vertices would be. I especially like combining this tool with some of the compositing options, but performance can drop pretty quickly with some of them."
            }
        ]
    },
    {
        "title": "Send a Demo",
        "thumbnail": "/images/projects/sad/thumbnail.gif",
        "description": "Send a demo is a web app made for recording and uploading audio to share with your friends. I worked with a friend over the course of a couple months adding various features, fixing bugs, and collaborating regularly.",
        "tools": "React, Node.js, Express, MongoDB, AWS S3, CSS, HTML",
        "id": "send-a-demo",
        "github": "https://github.com/thomasjonesmc/send-a-demo",
        "images": [
            {
                "title": "Demos",
                "path": "/images/projects/sad/demos.png",
                "description": "Text"
            },
            {
                "title": "Tracks",
                "path": "/images/projects/sad/demos.png",
                "description": "Text"
            },
            {
                "title": "Song",
                "path": "/images/projects/sad/thumbnail.gif",
                "description": "Text"
            },
            {
                "title": "Edit",
                "path": "/images/projects/sad/edit.png",
                "description": "Text"
            },
            {
                "title": "Profile",
                "path": "/images/projects/sad/demos.png",
                "description": "Text"
            }
        ]
    },
    {
        "title": "AB Form Senior Project",
        "thumbnail": "/images/projects/abform/thumbnail.gif",
        "description": "The AB Form project was my final senior project at SIUE. It took place over two full semesters in a team of three. We converted the Academic Scheduling Department's paper based schedule-change request forms to a web format.",
        "tools": "React, Node.js, Express, MySQL, CSS, HTML",
        "id": "abform",
        "images": [
            {
                "title": "Demos",
                "path": "/images/projects/sad/demos.png",
                "description": "Text"
            }
        ]
    }
]